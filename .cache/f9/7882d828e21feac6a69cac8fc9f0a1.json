{"id":"src/01_Redux.js","dependencies":[{"name":"D:\\redux-course\\package.json","includedInParent":true,"mtime":1646383074397}],"generated":{"js":"// import {\n//   createStore,\n//   compose,\n//   applyMiddleware,\n//   bindActionCreators,\n// } from \"redux\";\n// console.log(\"-------------------01_Redux.js-----------------------\")\n// // compose combine all given function and return new function\n// const makeLouder = (string) => string.toUpperCase();\n// const reapeatThreeTimes = (string) => string.repeat(3);\n// const embolden = (string) => string.bold();\n// const makeLouderreapeatThreeTimesembolden = (string) =>\n//   embolden(reapeatThreeTimes(makeLouder(string)));\n// const usingCompose = compose(embolden, reapeatThreeTimes, makeLouder);\n// console.log(\n//   makeLouderreapeatThreeTimesembolden(\"hello\"),\n//   usingCompose(\"hello\")\n// );\n// // initialstate\n// const initialState = { value: 0 };\n// // action\n// const INCREMENT = \"INCREMENT\";\n// const ADD = \"ADD\";\n// // reducerFunction\n// const reducer = (state = initialState, action) => {\n//   switch (action.type) {\n//     case INCREMENT:\n//       return { value: state.value + 1 };\n//     case ADD:\n//       return { value: state.value + action.payload };\n//   }\n// };\n// // action creator\n// const increment = () => ({ type: INCREMENT });\n// const add = (amount) => ({ type: ADD, payload: amount });\n// // createStore\n// const store = createStore(reducer);\n// //Subscriber will be call after evry state change\n// const subscriber = () => {\n//   console.log(\"SUBSCRIBER\", store.getState());\n// };\n// store.subscribe(subscriber);\n// // simply dispatch action\n// store.dispatch(increment());\n// store.dispatch(add(25));\n// console.log(store.getState());\n// // bindActionCreator -> it binds action with dispatch so no need to write likr -> store.dispatch\n// const actions = bindActionCreators({ increment, add },store.dispatch);\n// console.log(\"bindActionCreator\",actions)\n// actions.add(25)\n// actions.increment()\n// console.log(store.getState())"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"src/01_Redux.js","original":{"line":1,"column":0}},{"generated":{"line":2,"column":0},"source":"src/01_Redux.js","original":{"line":2,"column":0}},{"generated":{"line":3,"column":0},"source":"src/01_Redux.js","original":{"line":3,"column":0}},{"generated":{"line":4,"column":0},"source":"src/01_Redux.js","original":{"line":4,"column":0}},{"generated":{"line":5,"column":0},"source":"src/01_Redux.js","original":{"line":5,"column":0}},{"generated":{"line":6,"column":0},"source":"src/01_Redux.js","original":{"line":6,"column":0}},{"generated":{"line":7,"column":0},"source":"src/01_Redux.js","original":{"line":7,"column":0}},{"generated":{"line":8,"column":0},"source":"src/01_Redux.js","original":{"line":9,"column":0}},{"generated":{"line":9,"column":0},"source":"src/01_Redux.js","original":{"line":10,"column":0}},{"generated":{"line":10,"column":0},"source":"src/01_Redux.js","original":{"line":11,"column":0}},{"generated":{"line":11,"column":0},"source":"src/01_Redux.js","original":{"line":12,"column":0}},{"generated":{"line":12,"column":0},"source":"src/01_Redux.js","original":{"line":13,"column":0}},{"generated":{"line":13,"column":0},"source":"src/01_Redux.js","original":{"line":14,"column":0}},{"generated":{"line":14,"column":0},"source":"src/01_Redux.js","original":{"line":16,"column":0}},{"generated":{"line":15,"column":0},"source":"src/01_Redux.js","original":{"line":18,"column":0}},{"generated":{"line":16,"column":0},"source":"src/01_Redux.js","original":{"line":19,"column":0}},{"generated":{"line":17,"column":0},"source":"src/01_Redux.js","original":{"line":20,"column":0}},{"generated":{"line":18,"column":0},"source":"src/01_Redux.js","original":{"line":21,"column":0}},{"generated":{"line":19,"column":0},"source":"src/01_Redux.js","original":{"line":23,"column":0}},{"generated":{"line":20,"column":0},"source":"src/01_Redux.js","original":{"line":24,"column":0}},{"generated":{"line":21,"column":0},"source":"src/01_Redux.js","original":{"line":26,"column":0}},{"generated":{"line":22,"column":0},"source":"src/01_Redux.js","original":{"line":27,"column":0}},{"generated":{"line":23,"column":0},"source":"src/01_Redux.js","original":{"line":28,"column":0}},{"generated":{"line":24,"column":0},"source":"src/01_Redux.js","original":{"line":30,"column":0}},{"generated":{"line":25,"column":0},"source":"src/01_Redux.js","original":{"line":31,"column":0}},{"generated":{"line":26,"column":0},"source":"src/01_Redux.js","original":{"line":32,"column":0}},{"generated":{"line":27,"column":0},"source":"src/01_Redux.js","original":{"line":33,"column":0}},{"generated":{"line":28,"column":0},"source":"src/01_Redux.js","original":{"line":34,"column":0}},{"generated":{"line":29,"column":0},"source":"src/01_Redux.js","original":{"line":35,"column":0}},{"generated":{"line":30,"column":0},"source":"src/01_Redux.js","original":{"line":36,"column":0}},{"generated":{"line":31,"column":0},"source":"src/01_Redux.js","original":{"line":37,"column":0}},{"generated":{"line":32,"column":0},"source":"src/01_Redux.js","original":{"line":38,"column":0}},{"generated":{"line":33,"column":0},"source":"src/01_Redux.js","original":{"line":40,"column":0}},{"generated":{"line":34,"column":0},"source":"src/01_Redux.js","original":{"line":41,"column":0}},{"generated":{"line":35,"column":0},"source":"src/01_Redux.js","original":{"line":42,"column":0}},{"generated":{"line":36,"column":0},"source":"src/01_Redux.js","original":{"line":44,"column":0}},{"generated":{"line":37,"column":0},"source":"src/01_Redux.js","original":{"line":45,"column":0}},{"generated":{"line":38,"column":0},"source":"src/01_Redux.js","original":{"line":47,"column":0}},{"generated":{"line":39,"column":0},"source":"src/01_Redux.js","original":{"line":48,"column":0}},{"generated":{"line":40,"column":0},"source":"src/01_Redux.js","original":{"line":49,"column":0}},{"generated":{"line":41,"column":0},"source":"src/01_Redux.js","original":{"line":50,"column":0}},{"generated":{"line":42,"column":0},"source":"src/01_Redux.js","original":{"line":51,"column":0}},{"generated":{"line":43,"column":0},"source":"src/01_Redux.js","original":{"line":53,"column":0}},{"generated":{"line":44,"column":0},"source":"src/01_Redux.js","original":{"line":54,"column":0}},{"generated":{"line":45,"column":0},"source":"src/01_Redux.js","original":{"line":55,"column":0}},{"generated":{"line":46,"column":0},"source":"src/01_Redux.js","original":{"line":56,"column":0}},{"generated":{"line":47,"column":0},"source":"src/01_Redux.js","original":{"line":57,"column":0}},{"generated":{"line":48,"column":0},"source":"src/01_Redux.js","original":{"line":59,"column":0}},{"generated":{"line":49,"column":0},"source":"src/01_Redux.js","original":{"line":60,"column":0}},{"generated":{"line":50,"column":0},"source":"src/01_Redux.js","original":{"line":61,"column":0}},{"generated":{"line":51,"column":0},"source":"src/01_Redux.js","original":{"line":62,"column":0}},{"generated":{"line":52,"column":0},"source":"src/01_Redux.js","original":{"line":63,"column":0}}],"sources":{"src/01_Redux.js":"// import {\n//   createStore,\n//   compose,\n//   applyMiddleware,\n//   bindActionCreators,\n// } from \"redux\";\n// console.log(\"-------------------01_Redux.js-----------------------\")\n\n// // compose combine all given function and return new function\n// const makeLouder = (string) => string.toUpperCase();\n// const reapeatThreeTimes = (string) => string.repeat(3);\n// const embolden = (string) => string.bold();\n// const makeLouderreapeatThreeTimesembolden = (string) =>\n//   embolden(reapeatThreeTimes(makeLouder(string)));\n\n// const usingCompose = compose(embolden, reapeatThreeTimes, makeLouder);\n\n// console.log(\n//   makeLouderreapeatThreeTimesembolden(\"hello\"),\n//   usingCompose(\"hello\")\n// );\n\n// // initialstate\n// const initialState = { value: 0 };\n\n// // action\n// const INCREMENT = \"INCREMENT\";\n// const ADD = \"ADD\";\n\n// // reducerFunction\n// const reducer = (state = initialState, action) => {\n//   switch (action.type) {\n//     case INCREMENT:\n//       return { value: state.value + 1 };\n//     case ADD:\n//       return { value: state.value + action.payload };\n//   }\n// };\n\n// // action creator\n// const increment = () => ({ type: INCREMENT });\n// const add = (amount) => ({ type: ADD, payload: amount });\n\n// // createStore\n// const store = createStore(reducer);\n\n// //Subscriber will be call after evry state change\n// const subscriber = () => {\n//   console.log(\"SUBSCRIBER\", store.getState());\n// };\n// store.subscribe(subscriber);\n\n// // simply dispatch action\n// store.dispatch(increment());\n// store.dispatch(add(25));\n// console.log(store.getState());\n// // bindActionCreator -> it binds action with dispatch so no need to write likr -> store.dispatch\n\n// const actions = bindActionCreators({ increment, add },store.dispatch);\n// console.log(\"bindActionCreator\",actions)\n// actions.add(25)\n// actions.increment()\n// console.log(store.getState())\n\n"},"lineCount":null}},"error":null,"hash":"c5fd77a355d73a47a52b8068640c544d","cacheData":{"env":{}}}