{"version":3,"sources":["src/03_Enhancer.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA","file":"03_Enhancer.3e3f96d8.js","sourceRoot":"..","sourcesContent":["// import {\r\n//   createStore,\r\n//   compose,\r\n//   applyMiddleware,\r\n//   bindActionCreators,\r\n//   combineReducers,\r\n// } from \"redux\";\r\n// console.log(\"-------------------03_Enhancer.js-----------------------\");\r\n\r\n// const reducer = (state = { count: 1 }) => state;\r\n\r\n// // reducer, initial state,enhancer\r\n// // enhancer is function is pass createstore to function and we have to return instance of createstore\r\n// // mostly is used to view state and its done my redux dev tools\r\n// // this is like we have added middleware\r\n\r\n// const monitorEnhancer = (createStore) => (reducer, initialState, enhancer) => {\r\n//   const monitorReducer = (state, action) => {\r\n//     const start = performance.now();\r\n//     const newState = reducer(state, action);\r\n//     const end = performance.now();\r\n//     const diff = end - start;\r\n//     console.log(diff);\r\n//     return newState;\r\n//   };\r\n//   return createStore(monitorReducer, initialState, enhancer);\r\n// };\r\n\r\n// const logEnhancer = (createStore) => (reducer, initialState, enhancer) => {\r\n//   const loggedReducer = (state, action) => {\r\n//     console.log(\"Old-State\", state, action);\r\n//     const newState = reducer(state, state);\r\n//     console.log(\"New State\", newState, action);\r\n//     return newState;\r\n//   };\r\n//   return createStore(loggedReducer, initialState, enhancer);\r\n// };\r\n\r\n// const store = createStore(reducer, compose(monitorEnhancer, logEnhancer));\r\n// store.dispatch({ type: \"Hello\" });\r\n"]}