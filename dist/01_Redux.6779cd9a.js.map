{"version":3,"sources":["src/01_Redux.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","file":"01_Redux.6779cd9a.js","sourceRoot":"..","sourcesContent":["// import {\n//   createStore,\n//   compose,\n//   applyMiddleware,\n//   bindActionCreators,\n// } from \"redux\";\n// console.log(\"-------------------01_Redux.js-----------------------\")\n\n// // compose combine all given function and return new function\n// const makeLouder = (string) => string.toUpperCase();\n// const reapeatThreeTimes = (string) => string.repeat(3);\n// const embolden = (string) => string.bold();\n// const makeLouderreapeatThreeTimesembolden = (string) =>\n//   embolden(reapeatThreeTimes(makeLouder(string)));\n\n// const usingCompose = compose(embolden, reapeatThreeTimes, makeLouder);\n\n// console.log(\n//   makeLouderreapeatThreeTimesembolden(\"hello\"),\n//   usingCompose(\"hello\")\n// );\n\n// // initialstate\n// const initialState = { value: 0 };\n\n// // action\n// const INCREMENT = \"INCREMENT\";\n// const ADD = \"ADD\";\n\n// // reducerFunction\n// const reducer = (state = initialState, action) => {\n//   switch (action.type) {\n//     case INCREMENT:\n//       return { value: state.value + 1 };\n//     case ADD:\n//       return { value: state.value + action.payload };\n//   }\n// };\n\n// // action creator\n// const increment = () => ({ type: INCREMENT });\n// const add = (amount) => ({ type: ADD, payload: amount });\n\n// // createStore\n// const store = createStore(reducer);\n\n// //Subscriber will be call after evry state change\n// const subscriber = () => {\n//   console.log(\"SUBSCRIBER\", store.getState());\n// };\n// store.subscribe(subscriber);\n\n// // simply dispatch action\n// store.dispatch(increment());\n// store.dispatch(add(25));\n// console.log(store.getState());\n// // bindActionCreator -> it binds action with dispatch so no need to write likr -> store.dispatch\n\n// const actions = bindActionCreators({ increment, add },store.dispatch);\n// console.log(\"bindActionCreator\",actions)\n// actions.add(25)\n// actions.increment()\n// console.log(store.getState())\n\n"]}